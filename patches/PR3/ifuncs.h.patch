diff --git a/ifuncs.h b/ifuncs.h
index 956fc22e..c8e09565 100644
--- a/ifuncs.h
+++ b/ifuncs.h
@@ -40,26 +40,90 @@ free_xbuf(xbuf *xb)
 	memset(xb, 0, sizeof (xbuf));
 }
 
+#ifdef __MVS__
+#  define LINUX_S_IFIFO         0010000         /* [XSI] named pipe (fifo) */
+#  define LINUX_S_IFCHR         0020000         /* [XSI] character special */
+#  define LINUX_S_IFDIR         0040000         /* [XSI] directory */
+#  define	LINUX_S_IFBLK 	      0060000 	      /* [XSI] block special */
+#  define	LINUX_S_IFREG 	      0100000 	      /* [XSI] regular */
+#  define	LINUX_S_IFLNK 	      0120000 	      /* [XSI] symbolic link */
+#  define	LINUX_S_IFSOCK	      0140000 	      /* [XSI] socket */
+
+#  define ZOS_S_IFIFO  	    0x04000000        /* named pipe (fifo) */
+#  define ZOS_S_IFCHR  	    0x02000000        /* character special */
+#  define ZOS_S_IFDIR  	    0x01000000        /* directory */
+#  define ZOS_S_IFBLK  	    0x06000000        /* block special */
+#  define ZOS_S_IFREG  	    0x03000000        /* regular */
+#  define ZOS_S_IFLNK  	    0x05000000        /* symbolic link */
+#  define ZOS_S_IFSOCK  	    0x07000000        /* socket */
+
+/*
+ * z/OS has a 'mode_t' that is 64 bits in size, whereas
+ * Linux has a 'mode_t' that is 32 bits in size.
+ * The bottom 3 nibbles are the same, but z/OS uses
+ * the top word for the st_mode parts of mode and 
+ * Linux uses the top nibble
+ */
+static inline int 
+to_linux_mode(mode_t inmode)
+{
+  int outmode = (int) (inmode & 0x0FFF);
+
+  if (inmode & ZOS_S_IFIFO) { outmode |= LINUX_S_IFIFO; }
+  if (inmode & ZOS_S_IFCHR) { outmode |= LINUX_S_IFCHR; }
+  if (inmode & ZOS_S_IFDIR) { outmode |= LINUX_S_IFDIR; }
+  if (inmode & ZOS_S_IFBLK) { outmode |= LINUX_S_IFBLK; }
+  if (inmode & ZOS_S_IFREG) { outmode |= LINUX_S_IFREG; }
+  if (inmode & ZOS_S_IFLNK) { outmode |= LINUX_S_IFLNK; }
+  if (inmode & ZOS_S_IFSOCK) { outmode |= LINUX_S_IFSOCK; }
+  return outmode;
+}
+
+static inline mode_t
+to_zos_mode(int inmode) 
+{
+  mode_t outmode = (int) (inmode & 0x0FFF);
+
+  if (inmode & LINUX_S_IFIFO) { outmode |= ZOS_S_IFIFO; }
+  if (inmode & LINUX_S_IFCHR) { outmode |= ZOS_S_IFCHR; }
+  if (inmode & LINUX_S_IFDIR) { outmode |= ZOS_S_IFDIR; }
+  if (inmode & LINUX_S_IFBLK) { outmode |= ZOS_S_IFBLK; }
+  if (inmode & LINUX_S_IFREG) { outmode |= ZOS_S_IFREG; }
+  if (inmode & LINUX_S_IFLNK) { outmode |= ZOS_S_IFLNK; }
+  if (inmode & LINUX_S_IFSOCK) { outmode |= ZOS_S_IFSOCK; }
+
+  return outmode;
+}
+#endif
+
 static inline int
 to_wire_mode(mode_t mode)
 {
-#ifdef SUPPORT_LINKS
-#if _S_IFLNK != 0120000
+#if 0 /* def __MVS__ */
+  return to_linux_mode(mode);
+#else
+# ifdef SUPPORT_LINKS
+#  if _S_IFLNK != 0120000
 	if (S_ISLNK(mode))
 		return (mode & ~(_S_IFMT)) | 0120000;
-#endif
-#endif
+#  endif
+# endif
 	return mode;
+#endif
 }
 
 static inline mode_t
 from_wire_mode(int mode)
 {
-#if _S_IFLNK != 0120000
+#if 0 /* def __MVS__ */
+  return to_zos_mode(mode);
+#else
+# if _S_IFLNK != 0120000
 	if ((mode & (_S_IFMT)) == 0120000)
 		return (mode & ~(_S_IFMT)) | _S_IFLNK;
-#endif
+# endif
 	return mode;
+#endif
 }
 
 static inline char *
